version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
    networks:
      - frontend_backend
    restart: always 

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    volumes:
      - ./Frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"
    networks:
      - frontend_backend
    restart: always
 
  nginx:
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - frontend_backend

  prometheus:
    build:
      context: ./monitoring/prometheus
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    networks:
      - monitoring
      - frontend_backend

  grafana:
    build:
      context: ./monitoring/grafana
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    networks:
      - monitoring

  nginx_exporter:
    build:
      context: ./monitoring/nginx_exporter
      dockerfile: Dockerfile
    depends_on:
      - nginx
    ports:
      - "9113:9113"
    networks:
      - monitoring
      - frontend_backend

  node_exporter:
    build:
      context: ./monitoring/node_exporter
      dockerfile: Dockerfile
    ports:
      - "9100:9100"
    networks:
      - monitoring

  alertmanager:
    build:
      context: ./monitoring/Alertmanager
      dockerfile: Dockerfile
    ports:
      - "9093:9093"
    networks:
      - monitoring
      - frontend_backend

networks:
  monitoring:
  frontend_backend:

volumes:
  backend_node_modules:
  frontend_node_modules:

