version: '3.8'


services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    networks:
      - frontend_backend

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    volumes:
      - ./Frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      CHOKIDAR_USEPOLLING: "true"
    networks:
      - frontend_backend

  nginx:
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - frontend_backend

# ===== Monitoring Services =====

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - monitoring
      - frontend_backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring
  
  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_exporter
    command:
      - --nginx.scrape-uri=http://nginx/stub_status
      - --web.listen-address=:9113
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - frontend_backend

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring

networks:
  monitoring:
  frontend_backend:

volumes:
  backend_node_modules:
